{"version":3,"sources":["components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","applications/notification.js","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","applications/createDate.js","applications/createTransaction.js","components/Dashboard/Dashboard.jsx","components/App.jsx","index.js","components/Controls/Controls.module.css"],"names":["module","exports","notification","enterAmount","notEnoughMoney","negativeValues","Controls","state","amount","handleChange","e","value","target","setState","handleDeposite","toast","dismiss","error","className","style","errorToast","reset","props","onDeposit","Number","handleWithdraw","balance","onWithdraw","this","controls","ToastContainer","type","name","onChange","onClick","Component","Balance","income","expenses","totalDeposit","role","aria-label","toFixed","totalWithdraw","defaultProps","TransactionHistory","items","history","length","map","id","date","key","createDate","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","createTransaction","amountTransaction","typeTransaction","shortid","generate","Dashboard","transactions","handleDeposit","newTransaction","prevState","console","log","totalTransactions","forEach","elem","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb5a765e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__19D4J\",\"totalDeposit\":\"Balance_totalDeposit__nl192\",\"totalWithdraw\":\"Balance_totalWithdraw__h7Csi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1kcQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2zo0H\"};","const notification = {\n  enterAmount: 'Введите сумму для проведения операции!',\n  notEnoughMoney: 'На счету недостаточно средств для проведения операции!',\n  negativeValues: 'Сумма должна быть больше 0!',\n};\n\nexport default notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport notification from '../../applications/notification';\nimport style from './Controls.module.css';\n\nclass Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdraw: PropTypes.func.isRequired,\n    balance: PropTypes.number.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.setState({ amount: value });\n  };\n\n  handleDeposite = () => {\n    if (this.state.amount === '') {\n      toast.dismiss();\n      toast.error(notification.enterAmount, {\n        className: style.errorToast,\n      });\n      return;\n    }\n\n    if (this.state.amount <= 0) {\n      toast.dismiss();\n      toast.error(notification.negativeValues, {\n        className: style.errorToast,\n      });\n      this.reset();\n      return;\n    }\n    toast.dismiss();\n    this.props.onDeposit(Number(this.state.amount));\n    this.reset();\n  };\n\n  handleWithdraw = () => {\n    if (this.state.amount === '') {\n      toast.dismiss();\n      toast.error(notification.enterAmount, {\n        className: style.errorToast,\n      });\n      return;\n    }\n\n    if (this.state.amount <= 0) {\n      toast.dismiss();\n      toast.error(notification.negativeValues);\n      this.reset();\n      return;\n    }\n\n    if (this.state.amount > this.props.balance) {\n      toast.dismiss();\n      toast.error(notification.notEnoughMoney);\n      this.reset();\n      return;\n    }\n    toast.dismiss();\n    this.props.onWithdraw(Number(this.state.amount));\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ amount: '' });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={style.controls}>\n        <ToastContainer className={style.ToastContainer} />\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={amount}\n          onChange={this.handleChange}\n        />\n        <button type=\"button\" onClick={this.handleDeposite}>\n          Deposit\n        </button>\n        <button type=\"button\" onClick={this.handleWithdraw}>\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <section className={style.balance}>\n    <p className={style.totalDeposit}>\n      <span role=\"img\" aria-label=\"up arrow\">\n        ⬆️\n      </span>\n      {income.toFixed(2)}$\n    </p>\n    <p className={style.totalWithdraw}>\n      <span role=\"img\" aria-label=\"down arrow\">\n        ⬇️\n      </span>\n      {expenses.toFixed(2)}$\n    </p>\n    <p>Balance: {balance.toFixed(2)}$</p>\n  </section>\n);\n\nBalance.defaultProps = {\n  balance: 0,\n  income: 0,\n  expenses: 0,\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number,\n  income: PropTypes.number,\n  expenses: PropTypes.number,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={style.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      {items.length > 0 && (\n        <tbody>\n          {items.map(({ id, type, amount, date }) => {\n            return (\n              <tr key={id}>\n                <td>{type}</td>\n                <td>{amount.toFixed(2)}</td>\n                <td>{date}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      )}\n    </table>\n  );\n};\n\nTransactionHistory.defaultProps = {\n  items: [],\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","const createDate = () => {\n  const date = new Date();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const year = date.getFullYear();\n  const hour = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  return `${month}/${day}/${year}, ${hour}:${minutes}:${seconds}`;\n};\n\nexport default createDate;\n","import shortid from 'shortid';\nimport createDate from './createDate';\n\nconst createTransaction = (amountTransaction, typeTransaction) => {\n  return {\n    id: shortid.generate(),\n    date: createDate(),\n    amount: amountTransaction,\n    type: typeTransaction,\n  };\n};\n\nexport default createTransaction;\n","import React, { Component } from 'react';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport createTransaction from '../../applications/createTransaction';\nimport style from './Dashboard.module.css';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  handleDeposit = amount => {\n    const newTransaction = createTransaction(amount, 'deposit');\n    this.setState(prevState => ({\n      balance: prevState.balance + amount,\n      transactions: [...prevState.transactions, newTransaction],\n    }));\n  };\n\n  handleWithdraw = amount => {\n    console.log('amount Withdraw', amount);\n    const newTransaction = createTransaction(amount, 'withdrawal');\n    this.setState(prevState => ({\n      balance: prevState.balance - amount,\n      transactions: [...prevState.transactions, newTransaction],\n    }));\n  };\n\n  totalTransactions = () => {\n    let income = 0;\n    let expenses = 0;\n    this.state.transactions.forEach(elem => {\n      if (elem.type === 'deposit') {\n        income += elem.amount;\n      }\n\n      if (elem.type === 'withdrawal') {\n        expenses += elem.amount;\n      }\n    });\n    return { income, expenses };\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    const { income, expenses } = this.totalTransactions();\n\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          onDeposit={this.handleDeposit}\n          onWithdraw={this.handleWithdraw}\n          balance={balance}\n        />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <TransactionHistory items={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\nimport './style.css';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__16gTd\",\"ToastContainer\":\"Controls_ToastContainer__1BiQE\",\"errorToast\":\"Controls_errorToast__2_yzo\"};"],"sourceRoot":""}